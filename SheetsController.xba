<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="SheetsController" script:language="StarBasic">&apos; SheetControler:
&apos;	 This script contains some procedures to edit sheet data.
&apos; Author:
&apos;	Rafael Antonio Yon - rafael1999.yon@gmail.com

&apos;*******************************
&apos; Set cells properties:
&apos;	***********************************

&apos; Set cell formula
&apos; Params:
&apos; 	sheetName	: The sheet name of the specified cell.
&apos;	x			: The x coordinate of the specified cell.
&apos;	y			: The y coordinate of the specified cell.
&apos;	formula 	: The formula (ex: =A1+A2) to set for the specified cell.
Sub SetCellFormula(sheetName As String, x As Integer, y As Integer, formula as String)
	Dim doc, sheet As Object
	
	&apos; Get document references
	doc = ThisComponent
	sheet = doc.Sheets.getByName(sheetName)
	
	sheet.getCellByPosition(x, y).Formula = formula
End Sub

&apos; Set cell background color
&apos; Params:
&apos; 	sheetName	: The sheet name of the specified cell.
&apos;	x			: The x coordinate of the specified cell.
&apos;	y			: The y coordinate of the specified cell.
&apos;	rgbColor	: The long value from RGB(red, green, blue) function
Sub SetCellBackColor(sheetName As String, x As Integer, y As Integer, rgbColor As Long)
	Dim doc, sheet As Object
	
	&apos; Get document references
	doc = ThisComponent
	sheet = doc.Sheets.getByName(sheetName)
	
	sheet.getCellByPosition(x, y).CellBackColor = rgbColor
End Sub

&apos; Set cell horizontal justification
&apos; Params:
&apos; 	sheetName	  : The sheet name of the specified cell.
&apos;	x			  : The x coordinate of the specified cell.
&apos;	y			  : The y coordinate of the specified cell.
&apos;	justification : The horizontal justification of the text (value from com.sun.star.table.CellHoriJustify) 
&apos;					to set for the specified cell.
Sub SetCellHoriJustification(sheetName As String, x As Integer, y As Integer, justification As com.sun.star.table.CellHoriJustify)
	Dim doc, sheet As Object
	
	&apos; Get document references
	doc = ThisComponent
	sheet = doc.Sheets.getByName(sheetName)
	
	sheet.getCellByPosition(x, y).HoriJustify = justification
End Sub

&apos; Set cell vertical justification
&apos; Params:
&apos; 	sheetName	  : The sheet name of the specified cell.
&apos;	x			  : The x coordinate of the specified cell.
&apos;	y			  : The y coordinate of the specified cell.
&apos;	justification : The vertical justification of the text (value from com.sun.star.table.CellVertJustify) 
&apos;					to set for the specified cell.
Sub SetCellVertJustification(sheetName As String, x As Integer, y As Integer, justification As com.sun.star.table.CellVertJustify)
	Dim doc, sheet As Object
	
	&apos; Get document references
	doc = ThisComponent
	sheet = doc.Sheets.getByName(sheetName)
	
	sheet.getCellByPosition(x, y).VertJustify = justification
End Sub


&apos;*******************************
&apos; Set cells data properties:
&apos;	***********************************

&apos; Set cell format
&apos; Params:
&apos; 	sheetName	 : The sheet name of the specified cell.
&apos;	x			 : The x coordinate of the specified cell.
&apos;	y			 : The y coordinate of the specified cell.
&apos;	lang	 	 : The lang of this document.
&apos;	country		 : The country of this document.
&apos;	formatString : The format string of this document (ex: hour -&gt; HH:MM:SS)
Sub SetCellFormat(sheetName As String, x As Integer, y As Integer, lang As String, country As String, formatString As String)
	Dim doc, sheet, cell, numberFormat As Object
	Dim formatId As Long
	Dim localSettings As New com.sun.star.lang.Locale
	
	&apos; Get document references
	doc = ThisComponent
	sheet = doc.Sheets.getByName(sheetName)
	cell = sheet.getCellByPosition(x, y)
	numberFormats = doc.NumberFormats
	
	localSettings.Language = lang
	localSettings.Country = country
	
	&apos; Try get the predefined format id
	formatId = numberFormats.queryKey(formatString, localSettings, True)
	
	&apos; If format do not predefined, define
	If formatId = -1 Then
		formatId = numberFormats.addNew(formatString, localSettings)
	End If
	
	cell.NumberFormat = formatId
End Sub

&apos;*******************************
&apos; Set cells with string:
&apos;	***********************************

&apos; Set string from a cell
&apos; Params:
&apos; 	sheetName	: The sheet name of the specified cell.
&apos;	x			: The x coordinate of the specified cell.
&apos;	y			: The y coordinate of the specified cell.
&apos;	data 		: The data to set for the specified cell.
Sub SetCellString(sheetName As String, x As Integer, y As Integer, data as String)
	Dim doc, sheet As Object
	
	&apos; Get document references
	doc = ThisComponent
	sheet = doc.Sheets.getByName(sheetName)
	
	sheet.getCellByPosition(x, y).String = data
End Sub

&apos; Set strings from a sheet row
&apos; Params:
&apos; 	sheetName	: The sheet name of the specified cell.
&apos; 	y			: The y coordinate of the specified row.
&apos;	firstX		: The first positiion of x coordinate.
&apos; 	increase	: The amount to increase the x coordinate every seted data.
&apos;	data		: The array of String data to set in the specified row.
Sub SetRowStrings(sheetName As String, y As Integer, firstX As Integer, increase As Integer, data())
	Dim doc, sheet As Object
	Dim x As Integer
	
	&apos; Set first x position
	x = firstX
	
	&apos; Get document references:
	doc = ThisComponent
	sheet = doc.Sheets.getByName(sheetName)
	
	For Each d In data
		sheet.getCellByPosition(x, y).String = d
		
		x = x + increase
	Next
End Sub

&apos; Set strings from a sheet column
&apos; Params:
&apos; 	sheetName	: The sheet name of the specified cell.
&apos; 	x			: The x coordinate of the specified column.
&apos;	firstY		: The first positiion of y coordinate.
&apos; 	increase	: The amount to increase the y coordinate every seted data.
&apos;	data		: The array of data to set in the specified column.
Sub SetColumnStrings(sheetName As String, x as Integer, firstY as Integer, increase as Integer, data())
	Dim doc, sheet As Object
	Dim y As Integer
	
	&apos; Set first y position.
	y = firstY
	
	&apos; Get document references:
	doc = ThisComponent
	sheet = doc.Sheets.getByName(sheetName)
	
	For Each d In data
		sheet.getCellByPosition(x, y).String = d
		
		y = y + increase
	Next
End Sub

&apos;*******************************
&apos; Set cells with values (numeric)
&apos;	***********************************

&apos; Set value from a cell
&apos; Params:
&apos; 	sheetName	: The sheet name of the specified cell.
&apos;	x			: The x coordinate of the specified cell.
&apos;	y			: The y coordinate of the specified cell.
&apos;	data 		: The data to set for the specified cell.
Sub SetCellValue(sheetName As String, x As Integer, y As Integer, data as Variant)
	Dim doc, sheet As Object
	
	&apos; Get document references
	doc = ThisComponent
	sheet = doc.Sheets.getByName(sheetName)
	
	sheet.getCellByPosition(x, y).Value = data
End Sub

&apos; Set values from a sheet row
&apos; Params:
&apos; 	sheetName	: The sheet name of the specified cell.
&apos; 	y			: The y coordinate of the specified row.
&apos;	firstX		: The first positiion of x coordinate.
&apos; 	increase	: The amount to increase the x coordinate every seted data.
&apos;	data		: The array of values (numerics) data to set in the specified row.
Sub SetRowValues(sheetName As String, y As Integer, firstX As Integer, increase As Integer, data())
	Dim doc, sheet As Object
	Dim x As Integer
	
	&apos; Set first x position
	x = firstX
	
	&apos; Get document references:
	doc = ThisComponent
	sheet = doc.Sheets.getByName(sheetName)
	
	For Each d In data
		sheet.getCellByPosition(x, y).String = d
		
		x = x + increase
	Next
End Sub

&apos; Set values from a sheet column
&apos; Params:
&apos; 	sheetName	: The sheet name of the specified cell.
&apos; 	x			: The x coordinate of the specified column.
&apos;	firstY		: The first positiion of y coordinate.
&apos; 	increase	: The amount to increase the y coordinate every seted data.
&apos;	data		: The array of values (numerics) data to set in the specified column.
Sub SetColumnValues(sheetName As String, x as Integer, firstY as Integer, increase as Integer, data())
	Dim doc, sheet As Object
	Dim y As Integer
	
	&apos; Set first y position.
	y = firstY
	
	&apos; Get document references:
	doc = ThisComponent
	sheet = doc.Sheets.getByName(sheetName)
	
	For Each d In data
		sheet.getCellByPosition(x, y).String = d
		
		y = y + increase
	Next
End Sub
</script:module>